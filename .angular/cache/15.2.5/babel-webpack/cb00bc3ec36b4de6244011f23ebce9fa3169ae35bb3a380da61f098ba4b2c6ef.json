{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../_shared/user.service\";\nimport * as i3 from \"@angular/material/table\";\nfunction UsersComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"div\", 4)(2, \"span\", 5);\n    i0.ɵɵelement(3, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"br\")(7, \"br\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const element_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"colspan\", ctx_r0.uservalue.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@detailExpand\", element_r1.isExpanded ? \"expanded\" : \"collapsed\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", element_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", element_r1.description, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Location: \", element_r1.location, \" \");\n  }\n}\nconst ELEMENT_DATA = [{\n  firstName: \"Hydrogen\",\n  gender: \"hjgfh\",\n  lastName: \"H\",\n  phone: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n}];\nexport class UsersComponent {\n  constructor(fb, userApi) {\n    this.fb = fb;\n    this.userApi = userApi;\n    this.columnsToDisplay = [\"action\", \"firstName\", \"gender\", \"lastName\", \"phone\"];\n    this.currentlyOpenedItemIndex = -1;\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.userForm();\n    this.getUser();\n  }\n  userForm() {\n    this.user = this.fb.group({\n      firstName: [],\n      gender: [],\n      lastName: [],\n      phone: []\n    });\n  }\n  getUser() {\n    this.userApi.get().subscribe(res => {\n      this.usersData = res;\n      for (var user of this.usersData.users) {\n        this.uservalue = user;\n        this.dataSource = this.uservalue;\n        console.log(this.uservalue);\n      }\n      this.user.patchValue({\n        firstName: this.uservalue.firstName,\n        lastName: this.uservalue.lastName,\n        gender: this.uservalue.gender,\n        phone: this.uservalue.phone\n      });\n    });\n  }\n  setOpened(itemIndex) {\n    console.log(itemIndex);\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n  setClosed(itemIndex) {\n    if (this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n  showSpinner() {\n    this.loading = true;\n    setTimeout(() => {\n      this.loading = false;\n    }, 2000);\n  }\n}\nUsersComponent.ɵfac = function UsersComponent_Factory(t) {\n  return new (t || UsersComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n};\nUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersComponent,\n  selectors: [[\"app-users\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"container\", \"mt-5\"], [\"matColumnDef\", \"expandedDetail\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-cell\", \"\"], [1, \"example-element-detail\"], [1, \"expanded-contents\"], [\"width\", \"100\", \"height\", \"100\", 3, \"src\"]],\n  template: function UsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementContainerStart(1, 1);\n      i0.ɵɵtemplate(2, UsersComponent_td_2_Template, 9, 5, \"td\", 2);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [CommonModule, MatNativeDateModule, ReactiveFormsModule, MatExpansionModule, NgxLoadingModule, MatCardModule, MatFormFieldModule, MatIconModule, MatTableModule, i3.MatColumnDef, i3.MatCellDef, i3.MatCell],\n  styles: [\"table[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\ntr.example-detail-row[_ngcontent-%COMP%] {\\n  height: 0;\\n}\\n\\ntr.example-element-row[_ngcontent-%COMP%]:not(.example-expanded-row):active {\\n  background: #EFEFEF;\\n}\\n\\n.example-element-row[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border-bottom-width: 0;\\n  text-transform: capitalize !important;\\n}\\n\\n.example-element-detail[_ngcontent-%COMP%] {\\n  overflow: hidden;\\n  display: flex;\\n}\\n\\n.example-element-diagram[_ngcontent-%COMP%] {\\n  min-width: 80px;\\n  border: 2px solid black;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n\\n.example-element-symbol[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n\\n.example-element-description[_ngcontent-%COMP%] {\\n  padding: 16px;\\n}\\n\\n.example-element-description-attribution[_ngcontent-%COMP%] {\\n  opacity: 0.5;\\n}\\n\\nmat-icon[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  padding-top: 50px;\\n  background-color: #34495e;\\n}\\n\\n.hiddenRow[_ngcontent-%COMP%] {\\n  padding: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvX3BhZ2VzL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQUNKOztBQUNFO0VBQ0UsU0FBQTtBQUVKOztBQUdFO0VBQ0UsbUJBQUE7QUFBSjs7QUFFRTtFQUNFLHNCQUFBO0VBQ0EscUNBQUE7QUFDSjs7QUFDRTtFQUNFLGdCQUFBO0VBQ0EsYUFBQTtBQUVKOztBQUFFO0VBQ0UsZUFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7QUFHSjs7QUFERTtFQUNFLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0FBSUo7O0FBRkU7RUFDRSxhQUFBO0FBS0o7O0FBSEU7RUFDRSxZQUFBO0FBTUo7O0FBSkU7RUFDRSxlQUFBO0FBT0o7O0FBTEU7RUFDRSxpQkFBQTtFQUNBLHlCQUFBO0FBUUo7O0FBTEU7RUFDSSxxQkFBQTtBQVFOIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIHRyLmV4YW1wbGUtZGV0YWlsLXJvdyB7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG4gIHRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6aG92ZXIge1xuICAvLyAgIGJhY2tncm91bmQ6ICM3Nzc7XG4gIH1cbiAgdHIuZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTphY3RpdmUge1xuICAgIGJhY2tncm91bmQ6ICNFRkVGRUY7XG4gIH1cbiAgLmV4YW1wbGUtZWxlbWVudC1yb3cgdGQge1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemUgIWltcG9ydGFudDtcbiAgfVxuICAuZXhhbXBsZS1lbGVtZW50LWRldGFpbCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG4gIC5leGFtcGxlLWVsZW1lbnQtZGlhZ3JhbSB7XG4gICAgbWluLXdpZHRoOiA4MHB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgICBtYXJnaW46IDhweCAwO1xuICAgIGhlaWdodDogMTA0cHg7XG4gIH1cbiAgLmV4YW1wbGUtZWxlbWVudC1zeW1ib2wge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICB9XG4gIC5leGFtcGxlLWVsZW1lbnQtZGVzY3JpcHRpb24ge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gIH1cbiAgLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbi1hdHRyaWJ1dGlvbiB7XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG4gIG1hdC1pY29uIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgYm9keXtcbiAgICBwYWRkaW5nLXRvcDo1MHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IzM0NDk1ZTtcbiAgfVxuICBcbiAgLmhpZGRlblJvdyB7XG4gICAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n  data: {\n    animation: [trigger(\"detailExpand\", [state(\"collapsed\", style({\n      height: \"0px\",\n      minHeight: \"0\"\n    })), state(\"expanded\", style({\n      height: \"*\"\n    })), transition(\"expanded <=> collapsed\", animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\"))])]\n  }\n});","map":{"version":3,"mappings":"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","names":["CommonModule","MatNativeDateModule","ReactiveFormsModule","MatExpansionModule","NgxLoadingModule","MatCardModule","MatFormFieldModule","animate","state","style","transition","trigger","MatIconModule","MatTableModule","i0","ELEMENT_DATA","firstName","gender","lastName","phone","UsersComponent","constructor","fb","userApi","ngOnInit","userForm","getUser","user","group","get","subscribe","res","usersData","users","uservalue","dataSource","console","log","patchValue","setOpened","itemIndex","currentlyOpenedItemIndex","setClosed","showSpinner","loading","setTimeout","selectors","standalone","features","decls","vars","consts","template","styles","data","animation","height","minHeight"],"sourceRoot":"","sources":["/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.ts","/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { UserService } from '../../_shared/user.service';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\n\n\nexport interface PeriodicElement {\n  firstName: string;\n  gender: string;\n  lastName: string;\n  phone: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    firstName: \"Hydrogen\",\n    gender: \"hjgfh\",\n    lastName: \"H\",\n    phone: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`,\n  },\n]\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, MatNativeDateModule,\n    ReactiveFormsModule, MatExpansionModule, NgxLoadingModule, MatCardModule, MatFormFieldModule, MatIconModule, MatTableModule],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class UsersComponent implements OnInit {\n  dataSource: any\n  columnsToDisplay = [\"action\", \"firstName\", \"gender\", \"lastName\", \"phone\"];\n  expandedElement!: PeriodicElement | null;\n  user!: FormGroup\n  currentlyOpenedItemIndex = -1;\n  loading: boolean = false;\n  usersData: any\n  uservalue: any;\n  constructor(private fb: FormBuilder, private userApi: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userForm();\n    this.getUser();\n  }\n\n  userForm() {\n    this.user = this.fb.group({\n      firstName: [],\n      gender: [],\n      lastName: [],\n      phone: [],\n    })\n  }\n\n  getUser() {\n    this.userApi.get().subscribe(res => {\n      this.usersData = res\n      for (var user of this.usersData.users) {\n        this.uservalue = user\n        this.dataSource = this.uservalue;\n\n        console.log(this.uservalue)\n      }\n      this.user.patchValue({\n        firstName: this.uservalue.firstName,\n        lastName: this.uservalue.lastName,\n        gender: this.uservalue.gender,\n        phone: this.uservalue.phone\n      })\n    })\n  }\n\n  setOpened(itemIndex: any) {\n    console.log(itemIndex)\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n\n  setClosed(itemIndex: any) {\n    if (this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n\n  showSpinner() {\n    this.loading = true;\n    setTimeout(() => { this.loading = false; }, 2000);\n  }\n}\n","<div class=\"container mt-5\">\n    <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"uservalue.length\">\n            <div class=\"example-element-detail\"\n                [@detailExpand]=\"element.isExpanded ? 'expanded' : 'collapsed'\">\n                    <span class=\"expanded-contents\">\n                        <img [src]=\"element.image\" width=\"100\" height=\"100\">\n                    </span>\n                    <span class=\"expanded-contents\">\n                        {{ element.description }} \n                        <br>\n                        <br> \n                        Location: {{ element.location }}\n                    </span>    \n            </div>\n        </td>\n    </ng-container>\n    <!-- <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columnsToDisplay\">\n            <ng-container *ngIf=\"column !== 'action'; else action\">\n                <th mat-header-cell *matHeaderCellDef>{{ column }}</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element }}</td>\n\n            </ng-container>\n            <ng-template #action>\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef></th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <mat-icon (click)=\"\n            expandedElement = expandedElement === element ? null : element\n          \">{{expandedElement === element ? \"expand_less\" : \"expand_more\" }}</mat-icon>\n                    </td>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n       \n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"example-element-detail\"\n                    [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    <form action=\"\" [formGroup]=\"user\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <label for=\"\">First Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"firstName\">\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label for=\"\">Last Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"lastName\">\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label for=\"\">Gender</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"gender\">\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label for=\"\">Contact</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                            </div>\n                            <div class=\"col-md-3 mt-3\">\n                                <button class=\"btn btn-primary\" [disabled]=\"loading\" (click)=\"showSpinner()\"><i\n                                        class=\"fa\" [ngClass]=\"{'fa-spin fa-spinner': loading,}\"></i> Submit\n                                </button>&nbsp;&nbsp;\n                                <button class=\"btn btn-dark\">Cancel</button>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table> -->\n</div>\n<!-- <div class=\"container mt-5\">\n    <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let item of items; let i = index;\" (opened)=\"setOpened(i)\" (closed)=\"setClosed(i)\">\n            <mat-expansion-panel-header>\n\n                <mat-panel-title>\n                    {{ item.header }}\n                </mat-panel-title>\n\n            </mat-expansion-panel-header>\n            <form action=\"\" [formGroup]=\"user\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"\">First Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"firstName\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"lastName\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">Gender</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"gender\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">Contact</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                    </div>\n                    <div class=\"col-md-3 mt-3\">\n                        <button class=\"btn btn-primary\" [disabled]=\"loading\" (click)=\"showSpinner()\"><i class=\"fa\"\n                                [ngClass]=\"{'fa-spin fa-spinner': loading,}\"></i> Submit </button>&nbsp;&nbsp;\n                        <button class=\"btn btn-dark\">Cancel</button>\n                    </div>\n                </div>\n\n            </form>\n\n        </mat-expansion-panel>\n    </mat-accordion>\n</div> -->\n\n\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\n      Use of this source code is governed by an MIT-style license that\n      can be found in the LICENSE file at http://angular.io/license -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}