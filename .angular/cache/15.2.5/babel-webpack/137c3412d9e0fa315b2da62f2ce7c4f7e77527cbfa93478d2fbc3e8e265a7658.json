{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/expansion\";\nconst _c0 = function (a0) {\n  return {\n    \"fa-spin fa-spinner\": a0\n  };\n};\nfunction UsersComponent_mat_expansion_panel_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 2);\n    i0.ɵɵlistener(\"opened\", function UsersComponent_mat_expansion_panel_2_Template_mat_expansion_panel_opened_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.setOpened(i_r2));\n    })(\"closed\", function UsersComponent_mat_expansion_panel_2_Template_mat_expansion_panel_closed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.setClosed(i_r2));\n    });\n    i0.ɵɵelementStart(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-panel-description\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"form\", 3)(7, \"div\", 4)(8, \"div\", 5)(9, \"label\", 6);\n    i0.ɵɵtext(10, \"column 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 6);\n    i0.ɵɵtext(14, \"column 2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 6);\n    i0.ɵɵtext(18, \"column 3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 6);\n    i0.ɵɵtext(22, \"column 4\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 11)(25, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function UsersComponent_mat_expansion_panel_2_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.showSpinner());\n    });\n    i0.ɵɵelement(26, \"i\", 13);\n    i0.ɵɵtext(27, \" Submit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(29, \"button\", 14);\n    i0.ɵɵtext(30, \"Cancel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.header, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", item_r1.description, \" | \", ctx_r0.currentlyOpenedItemIndex === i_r2 ? \"Close\" : \"Open\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.user);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r0.loading));\n  }\n}\nexport class UsersComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.currentlyOpenedItemIndex = -1;\n    this.loading = false;\n    this.items = [{\n      header: 'Column 1'\n    }, {\n      header: 'Column 2'\n    }, {\n      header: 'Column 3'\n    }, {\n      header: 'Column 4'\n    }, {\n      header: 'Column 5'\n    }, {\n      header: 'Column 6'\n    }, {\n      header: 'Column 7'\n    }, {\n      header: 'Column 8'\n    }, {\n      header: 'Column 9'\n    }, {\n      header: 'Column 10'\n    }];\n  }\n  ngOnInit() {\n    this.userForm();\n  }\n  userForm() {\n    this.user = this.fb.group({\n      column1: [],\n      column2: [],\n      column3: [],\n      column4: []\n    });\n  }\n  setOpened(itemIndex) {\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n  setClosed(itemIndex) {\n    if (this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n  showSpinner() {\n    this.loading = true;\n    setTimeout(() => {\n      this.loading = false;\n    }, 3000);\n  }\n}\nUsersComponent.ɵfac = function UsersComponent_Factory(t) {\n  return new (t || UsersComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersComponent,\n  selectors: [[\"app-users\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"opened\", \"closed\", 4, \"ngFor\", \"ngForOf\"], [3, \"opened\", \"closed\"], [\"action\", \"\", 3, \"formGroup\"], [1, \"row\"], [1, \"col-md-6\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"column1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"column2\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"column3\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"column4\", 1, \"form-control\"], [1, \"col-md-3\", \"mt-3\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"fa\", 3, \"ngClass\"], [1, \"btn\", \"btn-dark\"]],\n  template: function UsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-accordion\");\n      i0.ɵɵtemplate(2, UsersComponent_mat_expansion_panel_2_Template, 31, 8, \"mat-expansion-panel\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [CommonModule, i2.NgClass, i2.NgForOf, MatNativeDateModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatExpansionModule, i3.MatAccordion, i3.MatExpansionPanel, i3.MatExpansionPanelHeader, i3.MatExpansionPanelTitle, i3.MatExpansionPanelDescription, NgxLoadingModule, MatCardModule, MatFormFieldModule],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["CommonModule","MatNativeDateModule","ReactiveFormsModule","MatExpansionModule","NgxLoadingModule","MatCardModule","MatFormFieldModule","i0","UsersComponent","constructor","fb","header","ngOnInit","userForm","user","group","column1","column2","column3","column4","setOpened","itemIndex","currentlyOpenedItemIndex","setClosed","showSpinner","loading","setTimeout","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.ts","/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, MatNativeDateModule,\n    ReactiveFormsModule, MatExpansionModule, NgxLoadingModule, MatCardModule, MatFormFieldModule],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  user!: FormGroup\n  currentlyOpenedItemIndex = -1;\n  loading: boolean = false;\n\n  items = [\n    { header: 'Column 1' },\n    { header: 'Column 2' },\n    { header: 'Column 3' },\n    { header: 'Column 4' },\n    { header: 'Column 5' },\n    { header: 'Column 6' },\n    { header: 'Column 7' },\n    { header: 'Column 8' },\n    { header: 'Column 9' },\n    { header: 'Column 10' },\n  ];\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.userForm();\n  }\n  userForm() {\n    this.user = this.fb.group({\n      column1: [],\n      column2: [],\n      column3: [],\n      column4: [],\n\n    })\n  }\n\n\n  setOpened(itemIndex: any) {\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n\n  setClosed(itemIndex: any) {\n    if (this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n\n  showSpinner() {\n    this.loading = true;\n    setTimeout(() => { this.loading = false; }, 3000);\n  }\n\n\n}\n","<div class=\"container mt-5\">\n    <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let item of items; let i = index;\" (opened)=\"setOpened(i)\" (closed)=\"setClosed(i)\">\n            <mat-expansion-panel-header>\n\n                <mat-panel-title>\n                    {{ item.header }}\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{ item.description }} | {{ currentlyOpenedItemIndex === i ? 'Close' : 'Open' }}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <form action=\"\" [formGroup]=\"user\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"\">column 1</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"column1\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">column 2</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"column2\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">column 3</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"column3\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">column 4</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"column4\">\n                    </div>\n                    <div class=\"col-md-3 mt-3\">\n                        <button class=\"btn btn-primary\" [disabled]=\"loading\" (click)=\"showSpinner()\"><i class=\"fa\"\n                                [ngClass]=\"{'fa-spin fa-spinner': loading,}\"></i> Submit </button>&nbsp;&nbsp;\n                                <button class=\"btn btn-dark\">Cancel</button>\n                    </div>\n                </div>\n\n            </form>\n\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n\n\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\n      Use of this source code is governed by an MIT-style license that\n      can be found in the LICENSE file at http://angular.io/license -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}