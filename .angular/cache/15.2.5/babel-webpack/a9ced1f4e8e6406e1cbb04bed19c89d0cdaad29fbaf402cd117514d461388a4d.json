{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/expansion\";\nfunction UsersComponent_mat_expansion_panel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 1);\n    i0.ɵɵlistener(\"opened\", function UsersComponent_mat_expansion_panel_1_Template_mat_expansion_panel_opened_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.setOpened(i_r2));\n    })(\"closed\", function UsersComponent_mat_expansion_panel_1_Template_mat_expansion_panel_closed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.setClosed(i_r2));\n    });\n    i0.ɵɵelementStart(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-panel-description\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.header, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", item_r1.description, \" | \", ctx_r0.currentlyOpenedItemIndex === i_r2 ? \"Close\" : \"Open\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.content);\n  }\n}\nexport class UsersComponent {\n  constructor() {\n    this.currentlyOpenedItemIndex = -1;\n    this.items = [{\n      header: 'Header 1',\n      description: 'Description 1',\n      content: 'Content 1'\n    }, {\n      header: 'Header 2',\n      description: 'Description 2',\n      content: 'Content 2'\n    }, {\n      header: 'Header 3',\n      description: 'Description 3',\n      content: 'Content 3'\n    }, {\n      header: 'Header 4',\n      description: 'Description 4',\n      content: 'Content 4'\n    }, {\n      header: 'Header 5',\n      description: 'Description 5',\n      content: 'Content 5'\n    }, {\n      header: 'Header 6',\n      description: 'Description 6',\n      content: 'Content 6'\n    }, {\n      header: 'Header 7',\n      description: 'Description 7',\n      content: 'Content 7'\n    }, {\n      header: 'Header 8',\n      description: 'Description 8',\n      content: 'Content 8'\n    }, {\n      header: 'Header 9',\n      description: 'Description 9',\n      content: 'Content 9'\n    }, {\n      header: 'Header 10',\n      description: 'Description 10',\n      content: 'Content 10'\n    }];\n  }\n  setOpened(itemIndex) {\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n  setClosed(itemIndex) {\n    if (this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n}\nUsersComponent.ɵfac = function UsersComponent_Factory(t) {\n  return new (t || UsersComponent)();\n};\nUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersComponent,\n  selectors: [[\"app-users\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"opened\", \"closed\", 4, \"ngFor\", \"ngForOf\"], [3, \"opened\", \"closed\"]],\n  template: function UsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-accordion\");\n      i0.ɵɵtemplate(1, UsersComponent_mat_expansion_panel_1_Template, 8, 4, \"mat-expansion-panel\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [CommonModule, i1.NgForOf, MatNativeDateModule, ReactiveFormsModule, MatExpansionModule, i2.MatAccordion, i2.MatExpansionPanel, i2.MatExpansionPanelHeader, i2.MatExpansionPanelTitle, i2.MatExpansionPanelDescription],\n  styles: [\".accordion[_ngcontent-%COMP%] {\\n  margin-top: 40px;\\n}\\n.accordion[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  border: none;\\n  margin-bottom: 20px;\\n}\\n.accordion[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  background: url(https://cdn0.iconfinder.com/data/icons/entypo/91/arrow56-512.png) no-repeat calc(100% - 10px) center;\\n  background-size: 20px;\\n  cursor: pointer;\\n  font-size: 18px;\\n}\\n.accordion[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   h2.collapsed[_ngcontent-%COMP%] {\\n  background-image: url(https://cdn0.iconfinder.com/data/icons/arrows-android-l-lollipop-icon-pack/24/expand2-256.png);\\n}\\n.accordion[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%] {\\n  padding-left: 0;\\n  padding-right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvX3BhZ2VzL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7QUFDSjtBQUFJO0VBQ0UsWUFBQTtFQUNBLG1CQUFBO0FBRU47QUFETTtFQUNFLG9IQUFBO0VBQ0YscUJBQUE7RUFDRSxlQUFBO0VBQ0EsZUFBQTtBQUdSO0FBRlE7RUFDTSxvSEFBQTtBQUlkO0FBRE07RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFHUiIsInNvdXJjZXNDb250ZW50IjpbIi5hY2NvcmRpb24ge1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgLmNhcmQge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgIGgyIHtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKGh0dHBzOi8vY2RuMC5pY29uZmluZGVyLmNvbS9kYXRhL2ljb25zL2VudHlwby85MS9hcnJvdzU2LTUxMi5wbmcpIG5vLXJlcGVhdCBjYWxjKDEwMCUgLSAxMHB4KSBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDIwcHg7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAmLmNvbGxhcHNlZCB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2NkbjAuaWNvbmZpbmRlci5jb20vZGF0YS9pY29ucy9hcnJvd3MtYW5kcm9pZC1sLWxvbGxpcG9wLWljb24tcGFjay8yNC9leHBhbmQyLTI1Ni5wbmcpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAmLWJvZHkge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICB9XG4gICAgfVxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAAQC,kBAAkB,QAAO,6BAA6B;;;;;;;ICH1DC,8CAG0B;IADxBA;MAAA;MAAA;MAAA;MAAA,OAAUA,qCAAY;IAAA,EAAC;MAAA;MAAA;MAAA;MAAA,OACbA,qCAAY;IAAA,EADC;IAEvBA,kDAA4B;IAExBA,YACF;IAAAA,iBAAkB;IAClBA,6CAAuB;IACrBA,YACF;IAAAA,iBAAwB;IAE1BA,yBAAG;IAAAA,YAAkB;IAAAA,iBAAI;;;;;;IANrBA,eACF;IADEA,+CACF;IAEEA,eACF;IADEA,wHACF;IAECA,eAAkB;IAAlBA,qCAAkB;;;ADA3B,OAAM,MAAOC,cAAc;EAR3BC;IAUE,6BAAwB,GAAG,CAAC,CAAC;IAE7B,UAAK,GAAG,CACN;MAAEC,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,UAAU;MAAEC,WAAW,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAW,CAAE,EAC1E;MAAEF,MAAM,EAAE,WAAW;MAAEC,WAAW,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAY,CAAE,CAC9E;;EAEDC,SAAS,CAACC,SAAa;IACrB,IAAI,CAACC,wBAAwB,GAAGD,SAAS;EAC3C;EAEAE,SAAS,CAACF,SAAa;IACrB,IAAG,IAAI,CAACC,wBAAwB,KAAKD,SAAS,EAAE;MAC9C,IAAI,CAACC,wBAAwB,GAAG,CAAC,CAAC;;EAEtC;;AAzBWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BhB,qCAAe;MACXA,+FAasB;MACxBA,iBAAgB;;;MAbKA,eAAU;MAAVA,mCAAU;;;iBDMrBJ,YAAY,cAAEC,mBAAmB,EACzCC,mBAAmB,EAACC,kBAAkB;EAAAkB;AAAA","names":["CommonModule","MatNativeDateModule","ReactiveFormsModule","MatExpansionModule","i0","UsersComponent","constructor","header","description","content","setOpened","itemIndex","currentlyOpenedItemIndex","setClosed","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.ts","/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatExpansionModule} from '@angular/material/expansion';\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, MatNativeDateModule,\n    ReactiveFormsModule,MatExpansionModule],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent {\n\n  currentlyOpenedItemIndex = -1;\n\n  items = [\n    { header: 'Header 1', description: 'Description 1', content: 'Content 1' },\n    { header: 'Header 2', description: 'Description 2', content: 'Content 2' },\n    { header: 'Header 3', description: 'Description 3', content: 'Content 3' },\n    { header: 'Header 4', description: 'Description 4', content: 'Content 4' },\n    { header: 'Header 5', description: 'Description 5', content: 'Content 5' },\n    { header: 'Header 6', description: 'Description 6', content: 'Content 6' },\n    { header: 'Header 7', description: 'Description 7', content: 'Content 7' },\n    { header: 'Header 8', description: 'Description 8', content: 'Content 8' },\n    { header: 'Header 9', description: 'Description 9', content: 'Content 9' },\n    { header: 'Header 10', description: 'Description 10', content: 'Content 10' },\n  ];\n\n  setOpened(itemIndex:any) {\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n\n  setClosed(itemIndex:any) {\n    if(this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n\n}\n","<mat-accordion>\n    <mat-expansion-panel \n      *ngFor=\"let item of items; let i = index;\"\n      (opened)=\"setOpened(i)\"\n      (closed)=\"setClosed(i)\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{ item.header }}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{ item.description }} | {{ currentlyOpenedItemIndex === i ? 'Close' : 'Open' }}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>{{ item.content }}</p>\n    </mat-expansion-panel>\n  </mat-accordion>\n  \n  \n  <!-- Copyright 2018 Google Inc. All Rights Reserved.\n      Use of this source code is governed by an MIT-style license that\n      can be found in the LICENSE file at http://angular.io/license -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}