{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../_shared/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/table\";\nfunction UsersComponent_ng_container_2_mat_header_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r5, \" \");\n  }\n}\nfunction UsersComponent_ng_container_2_mat_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r9 = ctx.$implicit;\n    const column_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r9[column_r5], \" \");\n  }\n}\nfunction UsersComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 8);\n    i0.ɵɵtemplate(1, UsersComponent_ng_container_2_mat_header_cell_1_Template, 2, 1, \"mat-header-cell\", 9);\n    i0.ɵɵtemplate(2, UsersComponent_ng_container_2_mat_cell_2_Template, 2, 1, \"mat-cell\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const column_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"matColumnDef\", column_r5);\n  }\n}\nfunction UsersComponent_mat_cell_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"div\", 10)(2, \"div\", 11)(3, \"div\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 14);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 15);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 16);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementStart(13, \"span\", 17);\n    i0.ɵɵtext(14, \" -- Wikipedia \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@detailExpand\", element_r11 == ctx_r1.expandedElement ? \"expanded\" : \"collapsed\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.position, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.symbol, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.weight, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.description, \" \");\n  }\n}\nfunction UsersComponent_mat_header_row_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction UsersComponent_mat_row_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-row\", 18);\n    i0.ɵɵlistener(\"click\", function UsersComponent_mat_row_6_Template_mat_row_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const element_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.expandedElement = ctx_r13.expandedElement === element_r12 ? null : element_r12);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"example-expanded-row\", ctx_r3.expandedElement === element_r12);\n  }\n}\nfunction UsersComponent_mat_row_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\", 19);\n  }\n}\nconst _c0 = function () {\n  return [\"expandedDetail\"];\n};\nconst ELEMENT_DATA = [{\n  column1: \"Hydrogen\",\n  column2: \"hjgfh\",\n  column3: \"H\",\n  column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n}, {\n  column1: \"Hydrogen\",\n  column2: \"hjgfh\",\n  column3: \"H\",\n  column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n}, {\n  column1: \"Hydrogen\",\n  column2: \"hjgfh\",\n  column3: \"H\",\n  column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n}, {\n  column1: \"Hydrogen\",\n  column2: \"hjgfh\",\n  column3: \"H\",\n  column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n}];\nexport class UsersComponent {\n  constructor(fb, userApi) {\n    this.fb = fb;\n    this.userApi = userApi;\n    this.dataSource = ELEMENT_DATA;\n    this.columnsToDisplay = [\"action\", \"firstName\", \"gender\", \"maidenName\", \"phone\"];\n    this.currentlyOpenedItemIndex = -1;\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.userForm();\n    this.getUser();\n  }\n  userForm() {\n    this.user = this.fb.group({\n      firstName: [],\n      gender: [],\n      maidenName: [],\n      phone: []\n    });\n  }\n  getUser() {\n    this.userApi.get().subscribe(res => {\n      this.usersData = res;\n      for (var user of this.usersData.users) {\n        this.uservalue = user;\n        console.log(this.uservalue);\n      }\n      this.user.patchValue({\n        firstName: this.uservalue.firstName,\n        maidenName: this.uservalue.maidenName,\n        gender: this.uservalue.gender,\n        phone: this.uservalue.phone\n      });\n    });\n  }\n  setOpened(itemIndex) {\n    console.log(itemIndex);\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n  setClosed(itemIndex) {\n    if (this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n  showSpinner() {\n    this.loading = true;\n    setTimeout(() => {\n      this.loading = false;\n    }, 2000);\n  }\n}\nUsersComponent.ɵfac = function UsersComponent_Factory(t) {\n  return new (t || UsersComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n};\nUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersComponent,\n  selectors: [[\"app-users\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 8,\n  vars: 6,\n  consts: [[1, \"container\", \"mt-5\"], [\"multiTemplateDataRows\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"matColumnDef\", \"expandedDetail\"], [4, \"matCellDef\"], [4, \"matHeaderRowDef\"], [\"class\", \"example-element-row\", 3, \"example-expanded-row\", \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"example-detail-row\", 4, \"matRowDef\", \"matRowDefColumns\"], [3, \"matColumnDef\"], [4, \"matHeaderCellDef\"], [1, \"example-element-detail\"], [1, \"example-element-diagram\"], [1, \"example-element-position\"], [1, \"example-element-symbol\"], [1, \"example-element-name\"], [1, \"example-element-weight\"], [1, \"example-element-description\"], [1, \"example-element-description-attribution\"], [1, \"example-element-row\", 3, \"click\"], [1, \"example-detail-row\"]],\n  template: function UsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-table\", 1);\n      i0.ɵɵtemplate(2, UsersComponent_ng_container_2_Template, 3, 1, \"ng-container\", 2);\n      i0.ɵɵelementContainerStart(3, 3);\n      i0.ɵɵtemplate(4, UsersComponent_mat_cell_4_Template, 15, 6, \"mat-cell\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(5, UsersComponent_mat_header_row_5_Template, 1, 0, \"mat-header-row\", 5);\n      i0.ɵɵtemplate(6, UsersComponent_mat_row_6_Template, 1, 2, \"mat-row\", 6);\n      i0.ɵɵtemplate(7, UsersComponent_mat_row_7_Template, 1, 0, \"mat-row\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnsToDisplay);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.columnsToDisplay);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.columnsToDisplay);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", i0.ɵɵpureFunction0(5, _c0));\n    }\n  },\n  dependencies: [CommonModule, i3.NgForOf, MatNativeDateModule, ReactiveFormsModule, MatExpansionModule, NgxLoadingModule, MatCardModule, MatFormFieldModule, MatIconModule, MatTableModule, i4.MatTable, i4.MatHeaderCellDef, i4.MatHeaderRowDef, i4.MatColumnDef, i4.MatCellDef, i4.MatRowDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow],\n  styles: [\"table[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\ntr.example-detail-row[_ngcontent-%COMP%] {\\n  height: 0;\\n}\\n\\ntr.example-element-row[_ngcontent-%COMP%]:not(.example-expanded-row):active {\\n  background: #EFEFEF;\\n}\\n\\n.example-element-row[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border-bottom-width: 0;\\n  text-transform: capitalize !important;\\n}\\n\\n.example-element-detail[_ngcontent-%COMP%] {\\n  overflow: hidden;\\n  display: flex;\\n}\\n\\n.example-element-diagram[_ngcontent-%COMP%] {\\n  min-width: 80px;\\n  border: 2px solid black;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n\\n.example-element-symbol[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n\\n.example-element-description[_ngcontent-%COMP%] {\\n  padding: 16px;\\n}\\n\\n.example-element-description-attribution[_ngcontent-%COMP%] {\\n  opacity: 0.5;\\n}\\n\\nmat-icon[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvX3BhZ2VzL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQUNKOztBQUNFO0VBQ0UsU0FBQTtBQUVKOztBQUdFO0VBQ0UsbUJBQUE7QUFBSjs7QUFFRTtFQUNFLHNCQUFBO0VBQ0EscUNBQUE7QUFDSjs7QUFDRTtFQUNFLGdCQUFBO0VBQ0EsYUFBQTtBQUVKOztBQUFFO0VBQ0UsZUFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7QUFHSjs7QUFERTtFQUNFLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0FBSUo7O0FBRkU7RUFDRSxhQUFBO0FBS0o7O0FBSEU7RUFDRSxZQUFBO0FBTUo7O0FBSkU7RUFDRSxlQUFBO0FBT0oiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgdHIuZXhhbXBsZS1kZXRhaWwtcm93IHtcbiAgICBoZWlnaHQ6IDA7XG4gIH1cbiAgdHIuZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTpob3ZlciB7XG4gIC8vICAgYmFja2dyb3VuZDogIzc3NztcbiAgfVxuICB0ci5leGFtcGxlLWVsZW1lbnQtcm93Om5vdCguZXhhbXBsZS1leHBhbmRlZC1yb3cpOmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZDogI0VGRUZFRjtcbiAgfVxuICAuZXhhbXBsZS1lbGVtZW50LXJvdyB0ZCB7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZSAhaW1wb3J0YW50O1xuICB9XG4gIC5leGFtcGxlLWVsZW1lbnQtZGV0YWlsIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cbiAgLmV4YW1wbGUtZWxlbWVudC1kaWFncmFtIHtcbiAgICBtaW4td2lkdGg6IDgwcHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICAgIG1hcmdpbjogOHB4IDA7XG4gICAgaGVpZ2h0OiAxMDRweDtcbiAgfVxuICAuZXhhbXBsZS1lbGVtZW50LXN5bWJvbCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiA0MHB4O1xuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gIH1cbiAgLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbiB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxuICAuZXhhbXBsZS1lbGVtZW50LWRlc2NyaXB0aW9uLWF0dHJpYnV0aW9uIHtcbiAgICBvcGFjaXR5OiAwLjU7XG4gIH1cbiAgbWF0LWljb24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  data: {\n    animation: [trigger(\"detailExpand\", [state(\"collapsed\", style({\n      height: \"0px\",\n      minHeight: \"0\"\n    })), state(\"expanded\", style({\n      height: \"*\"\n    })), transition(\"expanded <=> collapsed\", animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\"))])]\n  }\n});","map":{"version":3,"mappings":"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","names":["CommonModule","MatNativeDateModule","ReactiveFormsModule","MatExpansionModule","NgxLoadingModule","MatCardModule","MatFormFieldModule","animate","state","style","transition","trigger","MatIconModule","MatTableModule","i0","ELEMENT_DATA","column1","column2","column3","column4","UsersComponent","constructor","fb","userApi","ngOnInit","userForm","getUser","user","group","firstName","gender","maidenName","phone","get","subscribe","res","usersData","users","uservalue","console","log","patchValue","setOpened","itemIndex","currentlyOpenedItemIndex","setClosed","showSpinner","loading","setTimeout","selectors","standalone","features","decls","vars","consts","template","styles","data","animation","height","minHeight"],"sourceRoot":"","sources":["/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.ts","/home/thoughtwin/Downloads/interview-starter/src/app/_pages/users/users.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { UserService } from '../../_shared/user.service';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\n\n\nexport interface PeriodicElement {\n  column1: string;\n  column2: string;\n  column3: string;\n  column4: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    column1: \"Hydrogen\",\n    column2: \"hjgfh\",\n    column3: \"H\",\n    column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`,\n  },\n  {\n    column1: \"Hydrogen\",\n    column2: \"hjgfh\",\n    column3: \"H\",\n    column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`,\n  },\n  {\n    column1: \"Hydrogen\",\n    column2: \"hjgfh\",\n    column3: \"H\",\n    column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`,\n  },\n  {\n    column1: \"Hydrogen\",\n    column2: \"hjgfh\",\n    column3: \"H\",\n    column4: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`,\n  },\n]\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, MatNativeDateModule,\n    ReactiveFormsModule, MatExpansionModule, NgxLoadingModule, MatCardModule, MatFormFieldModule,MatIconModule,MatTableModule],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\n        \"expanded <=> collapsed\",\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\n      ),\n    ]),\n  ],\n})\nexport class UsersComponent implements OnInit {\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = [\"action\", \"firstName\", \"gender\", \"maidenName\", \"phone\"];\n  expandedElement!: PeriodicElement | null;\n  user!: FormGroup\n  currentlyOpenedItemIndex = -1;\n  loading: boolean = false;\n  usersData: any\n  // items = [\n  //   { header: 'Column 1' },\n  //   { header: 'Column 2' },\n  //   { header: 'Column 3' },\n  //   { header: 'Column 4' },\n  //   { header: 'Column 5' },\n  //   { header: 'Column 6' },\n  //   { header: 'Column 7' },\n  //   { header: 'Column 8' },\n  //   { header: 'Column 9' },\n  //   { header: 'Column 10' },\n  // ];\n  uservalue: any;\n  constructor(private fb: FormBuilder, private userApi: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userForm();\n    this.getUser();\n  }\n\n  userForm() {\n    this.user = this.fb.group({\n      firstName: [],\n      gender: [],\n      maidenName: [],\n      phone: [],\n    })\n  }\n\n  getUser() {\n    this.userApi.get().subscribe(res => {\n      this.usersData = res\n      for (var user of this.usersData.users) {\n        this.uservalue = user\n        console.log(this.uservalue)\n      }\n      this.user.patchValue({\n        firstName: this.uservalue.firstName,\n        maidenName: this.uservalue.maidenName,\n        gender: this.uservalue.gender,\n        phone: this.uservalue.phone\n      })\n    })\n  }\n\n  setOpened(itemIndex: any) {\n    console.log(itemIndex)\n    this.currentlyOpenedItemIndex = itemIndex;\n  }\n\n  setClosed(itemIndex: any) {\n    if (this.currentlyOpenedItemIndex === itemIndex) {\n      this.currentlyOpenedItemIndex = -1;\n    }\n  }\n\n  showSpinner() {\n    this.loading = true;\n    setTimeout(() => { this.loading = false; }, 2000);\n  }\n}\n","<div class=\"container mt-5\">\n    <mat-table\n       [dataSource]=\"dataSource\" multiTemplateDataRows\n       class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <mat-header-cell *matHeaderCellDef> {{column}} </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element[column]}} </mat-cell>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <mat-cell *matCellDef=\"let element\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-diagram\">\n          <div class=\"example-element-position\"> {{element.position}} </div>\n          <div class=\"example-element-symbol\"> {{element.symbol}} </div>\n          <div class=\"example-element-name\"> {{element.name}} </div>\n          <div class=\"example-element-weight\"> {{element.weight}} </div>\n        </div>\n        <div class=\"example-element-description\">\n          {{element.description}}\n          <span class=\"example-element-description-attribution\"> -- Wikipedia </span>\n        </div>\n      </div>\n    </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n  <mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </mat-row>\n  <mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></mat-row>\n</mat-table>\n    <!-- <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columnsToDisplay\">\n            <ng-container *ngIf=\"column !== 'action'; else action\">\n                <th mat-header-cell *matHeaderCellDef>{{ column }}</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element[column] }}</td>\n\n            </ng-container>\n            <ng-template #action>\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef></th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <mat-icon (click)=\"\n            expandedElement = expandedElement === element ? null : element\n          \">{{expandedElement === element ? \"expand_less\" : \"expand_more\" }}</mat-icon>\n                    </td>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"example-element-detail\"\n                    [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    <form action=\"\" [formGroup]=\"user\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <label for=\"\">First Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"firstName\">\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label for=\"\">Last Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"maidenName\">\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label for=\"\">Gender</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"gender\">\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label for=\"\">Contact</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                            </div>\n                            <div class=\"col-md-3 mt-3\">\n                                <button class=\"btn btn-primary\" [disabled]=\"loading\" (click)=\"showSpinner()\"><i\n                                        class=\"fa\" [ngClass]=\"{'fa-spin fa-spinner': loading,}\"></i> Submit\n                                </button>&nbsp;&nbsp;\n                                <button class=\"btn btn-dark\">Cancel</button>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table> -->\n</div>\n<!-- <div class=\"container mt-5\">\n    <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let item of items; let i = index;\" (opened)=\"setOpened(i)\" (closed)=\"setClosed(i)\">\n            <mat-expansion-panel-header>\n\n                <mat-panel-title>\n                    {{ item.header }}\n                </mat-panel-title>\n\n            </mat-expansion-panel-header>\n            <form action=\"\" [formGroup]=\"user\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"\">First Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"firstName\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"maidenName\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">Gender</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"gender\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"\">Contact</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                    </div>\n                    <div class=\"col-md-3 mt-3\">\n                        <button class=\"btn btn-primary\" [disabled]=\"loading\" (click)=\"showSpinner()\"><i class=\"fa\"\n                                [ngClass]=\"{'fa-spin fa-spinner': loading,}\"></i> Submit </button>&nbsp;&nbsp;\n                        <button class=\"btn btn-dark\">Cancel</button>\n                    </div>\n                </div>\n\n            </form>\n\n        </mat-expansion-panel>\n    </mat-accordion>\n</div> -->\n\n\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\n      Use of this source code is governed by an MIT-style license that\n      can be found in the LICENSE file at http://angular.io/license -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}